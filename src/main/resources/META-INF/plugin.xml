<idea-plugin>
    <id>cyclic.lang.CyclicIntellijPlugin</id>
    <name>Cyclic</name>
    <vendor>Cyclic</vendor>

    <idea-version until-build="222.*" since-build="221.0" />

    <description><![CDATA[
    Adds support for the Cyclic programming language to IntelliJ.
    ]]></description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.java</depends>

    <depends>org.jetbrains.plugins.yaml</depends>
    <depends>Coverage</depends>

    <extensionPoints>
        <extensionPoint qualifiedName="cyclic.intellij.newProjectWizard.buildSystem"
                        interface="cyclic.intellij.projects.BuildSystemCyclicNewProjectWizard"
                        dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->

        <fileType name="Cyclic File"
                  implementationClass="cyclic.intellij.CyclicFileType"
                  fieldName="FILE_TYPE"
                  language="Cyclic"
                  extensions="cyc"
        />

        <lang.syntaxHighlighterFactory language="Cyclic"
                                       implementationClass="cyclic.intellij.parser.CyclicSyntaxHighlighter"/>

        <lang.parserDefinition language="Cyclic"
                               implementationClass="cyclic.intellij.parser.CyclicParserDefinition"/>

        <stubElementTypeHolder class="cyclic.intellij.psi.stubs.StubTypes"/>
        <stubIndex implementation="cyclic.intellij.psi.indexes.CyclicClassNameIndex"/>
        <stubIndex implementation="cyclic.intellij.psi.indexes.CyclicShortClassNameIndex"/>
        <stubIndex implementation="cyclic.intellij.psi.indexes.CyclicInheritanceListIndex"/>
        <stubIndex implementation="cyclic.intellij.psi.indexes.CyclicFieldIndex"/>
        <stubIndex implementation="cyclic.intellij.psi.indexes.CyclicMethodIndex"/>

        <lang.refactoringSupport language="Cyclic"
                                 implementationClass="cyclic.intellij.refactoring.CycRefactoringSupport"/>

        <lang.foldingBuilder language="Cyclic"
                             implementationClass="cyclic.intellij.presentation.CyclicFoldingBuilder"/>

        <lang.braceMatcher language="Cyclic"
                           implementationClass="cyclic.intellij.presentation.CyclicBraceMatcher"/>

        <lang.commenter language="Cyclic"
                        implementationClass="cyclic.intellij.refactoring.CycCommenter"/>

        <lang.findUsagesProvider language="Cyclic"
                                 implementationClass="cyclic.intellij.refactoring.CycFindUsagesProvider"/>

        <completion.contributor language="Cyclic"
                                implementationClass="cyclic.intellij.completion.CycKeywordContributor"/>

        <completion.contributor language="Cyclic"
                                implementationClass="cyclic.intellij.completion.CycTypeContributor"/>

        <completion.contributor language="Cyclic"
                                implementationClass="cyclic.intellij.completion.CycExpressionContributor"/>

        <lang.quoteHandler language="Cyclic"
                           implementationClass="cyclic.intellij.refactoring.CycQuoteHandler"/>

        <codeInsight.inlayProvider language="Cyclic"
                                   implementationClass="cyclic.intellij.presentation.CyclicImplicitTypeInlayProvider"/>

        <lang.documentationProvider language="Cyclic"
                                    implementationClass="cyclic.intellij.presentation.CyclicDocumentationProvider"/>

        <applicationConfigurable groupId="language"
                                 id="preferences.language.cyclic"
                                 displayName="Cyclic"
                                 instance="cyclic.intellij.model.sdks.config.CyclicLanguageConfiguration"/>

        <runLineMarkerContributor language="Cyclic"
                                  implementationClass="cyclic.intellij.presentation.CyclicRunLineMarkerContributor"/>

        <compiler.task execute="BEFORE"
                       implementation="cyclic.intellij.run.CyclicCompileTask"/>

        <codeInsight.lineMarkerProvider language="Cyclic"
                                        implementationClass="cyclic.intellij.presentation.CyclicLineMarkerProvider"/>

        <codeInsight.gotoSuper language="Cyclic"
                               implementationClass="cyclic.intellij.presentation.find.CyclicGoToSuperHandler"/>

        <codeInsight.overrideMethod language="Cyclic"
                                    implementationClass="cyclic.intellij.refactoring.generation.CyclicOverrideMethodsHandler"/>

        <java.elementFinder implementation="cyclic.intellij.asJava.CyclicPsiElementProvider"/>

        <newProjectWizard.language implementation="cyclic.intellij.projects.CyclicNewProjectWizard"/>
        <frameworkSupport implementation="cyclic.intellij.model.facet.CyclicFrameworkSupport"/>
        <facetType implementation="cyclic.intellij.model.facet.CyclicFacetType"/>

        <fileIconPatcher implementation="cyclic.intellij.projectFiles.CyclicProjectFileIconPatcher"/>
        <psi.referenceContributor language="yaml" implementation="cyclic.intellij.projectFiles.CyclicProjectPathReferenceContributor"/>

        <renamePsiElementProcessor implementation="cyclic.intellij.refactoring.RenameCycTypeProcessor"/>
        <nameSuggestionProvider implementation="cyclic.intellij.refactoring.CycNameSuggestionProvider"/>

        <usageTypeProvider implementation="cyclic.intellij.refactoring.CycUsageTypeProvider"/>
        <fileIconPatcher implementation="cyclic.intellij.presentation.CyclicFileIconPatcher"/>
        <createFromTemplateHandler implementation="cyclic.intellij.templates.CyclicInternalTemplateHandler"/>
        <runConfigurationProducer implementation="cyclic.intellij.run.CyclicRunConfigProducer"/>

        <lang.formatter language="Cyclic" implementationClass="cyclic.intellij.formatter.CyclicFormattingModelBuilder"/>
        <codeStyleSettingsProvider implementation="cyclic.intellij.formatter.settings.CyclicCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="cyclic.intellij.formatter.settings.CyclicLanguageCodeStyleSettingsProvider"/>

        <lang.psiStructureViewFactory language="Cyclic" implementationClass="cyclic.intellij.presentation.structureView.CyclicStructViewFactory"/>
        <navbar implementation="cyclic.intellij.presentation.CyclicNavbar"/>

        <debugger.javaDebugAware implementation="cyclic.intellij.debug.CyclicIsDebugAware"/>
        <debugger.positionManagerFactory implementation="cyclic.intellij.debug.CyclicPosManagerFactory"/>
        <javaCoverageEngineExtension implementation="cyclic.intellij.coverage.CyclicCoverageExtension"/>
        <projectViewNodeDecorator implementation="cyclic.intellij.coverage.CyclicCoverageNodeDecorator"/>

        <gotoClassContributor implementation="cyclic.intellij.presentation.find.CyclicGoToClassContributor"/>
        <directClassInheritorsSearch implementation="cyclic.intellij.presentation.find.CyclicDirectInheritorsSearcher"/>
        <gotoDeclarationHandler implementation="cyclic.intellij.presentation.find.CyclicGotoVarTypeHandler"/>

        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.NameAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.ContextKeywordAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.AnnotationAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.InvalidElementAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.InvalidReferenceAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.InvalidTypeAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.InvalidReturnAnnotator"/>
        <annotator language="Cyclic"
                   implementationClass="cyclic.intellij.presentation.annotators.InvalidTypeDefinitionAnnotator"/>

        <externalAnnotator language="Cyclic"
                           implementationClass="cyclic.intellij.presentation.compilerLints.CompilerExternalAnnotator"/>

        <internalFileTemplate name="Cyclic Class"/>
        <internalFileTemplate name="Cyclic Interface"/>
        <internalFileTemplate name="Cyclic Enum"/>
        <internalFileTemplate name="Cyclic Annotation"/>
        <internalFileTemplate name="Cyclic Record"/>
        <internalFileTemplate name="Cyclic Single"/>

        <liveTemplateContext implementation="cyclic.intellij.templates.live.CyclicTemplateContextType$Generic"/>
        <liveTemplateContext implementation="cyclic.intellij.templates.live.CyclicTemplateContextType$Declaration"/>
        <liveTemplateContext implementation="cyclic.intellij.templates.live.CyclicTemplateContextType$Statement"/>
        <liveTemplateContext implementation="cyclic.intellij.templates.live.CyclicTemplateContextType$Expression"/>
        <liveTemplateContext implementation="cyclic.intellij.templates.live.CyclicTemplateContextType$Comment"/>
        <liveTemplateMacro implementation="cyclic.intellij.templates.live.CyclicVariableOfTypeMacro"/>
        <defaultLiveTemplates file="/liveTemplates/Cyclic.xml"/>

        <localInspection language="Cyclic"
                         groupPath="Cyclic"
                         enabledByDefault="true" level="WARNING"
                         groupName="Unreachable code" displayName="Unreachable code"
                         implementationClass="cyclic.intellij.inspections.UnreachableCodeInspection"/>

        <localInspection language="Cyclic"
                         groupPath="Cyclic"
                         enabledByDefault="true" level="WARNING"
                         groupName="Unused import" displayName="Unused import"
                         implementationClass="cyclic.intellij.inspections.UnusedCycImportInspection"/>

        <localInspection language="Cyclic"
                         groupPath="Cyclic"
                         enabledByDefault="true" level="WARNING"
                         groupName="Unnecessary qualification" displayName="Unnecessary qualification"
                         implementationClass="cyclic.intellij.inspections.UnnecessaryQualifierInspection"/>

        <localInspection language="Cyclic"
                         groupPath="Cyclic"
                         enabledByDefault="true" level="WARNING"
                         groupName="External linting" displayName="Compiler linting"
                         shortName="CyclicCompilerLinter"
                         implementationClass="cyclic.intellij.inspections.CompilerLinterInspection"/>

        <intentionAction>
            <className>cyclic.intellij.refactoring.intentions.RemoveParensAction</className>
        </intentionAction>
        <intentionAction>
            <className>cyclic.intellij.refactoring.intentions.AddParensAction</className>
        </intentionAction>
        <intentionAction>
            <className>cyclic.intellij.refactoring.intentions.AddBracesAction</className>
        </intentionAction>
        <intentionAction>
            <className>cyclic.intellij.refactoring.intentions.RemoveBracesAction</className>
        </intentionAction>
    </extensions>

    <extensions defaultExtensionNs="JavaScript.JsonSchema">
        <ProviderFactory implementation="cyclic.intellij.projectFiles.CyclicProjectSchemaProvider$Factory"/>
    </extensions>

    <extensions defaultExtensionNs="cyclic.intellij">
        <newProjectWizard.buildSystem implementation="cyclic.intellij.projects.buildSystem.IntelliJCyclicNewProjectWizard"/>
        <newProjectWizard.buildSystem implementation="cyclic.intellij.projects.buildSystem.CyclicCompilerNewProjectWizard"/>
    </extensions>

    <actions>
        <action id="cyclic.intellij.actions.CreateCyclicClassAction" class="cyclic.intellij.actions.CreateCyclicClassAction" text="Cyclic Class" description="Create new Cyclic class">
            <add-to-group group-id="NewGroup1" anchor="after" relative-to-action="NewClass"/>
        </action>
    </actions>
</idea-plugin>