annotator.invalid.assign.type=Incompatible types: ''{0}'' is not assignable to ''{1}''
annotator.invalid.element.exprNotType=Expected an expression, not a type
annotator.invalid.reference.method=Cannot resolve method ''{0}''
annotator.invalid.reference.staticThis='this' can only be used in non-static contexts
annotator.invalid.reference.variable=Cannot resolve type, variable, or field ''{0}''
annotator.invalid.return.type=Incompatible types: ''{0}'' is not assignable to ''{1}''
annotator.invalid.return.valueFromVoid=Cannot return a value from a method with a void return type
annotator.invalid.supertype.classOnly=Expecting a class, not an interface
annotator.invalid.supertype.extFinal=Cannot extend final type
annotator.invalid.supertype.implFinal=Cannot implement final type
annotator.invalid.supertype.interfaceImpl=Interfaces cannot implement interfaces
annotator.invalid.supertype.interfaceOnly=Expecting an interface, not a class
annotator.invalid.supertype.oneOnly=Classes cannot extend multiple classes
annotator.invalid.supertype.refClassOnly=Expecting a class, not primitive or array
annotator.invalid.supertype.refInterfaceOnly=Expecting an interface, not primitive or array
annotator.invalid.type.name=Cyclic type ''{0}'' should be declared in file ''{1}.cyc''
annotator.invisible.member=Member ''{0}'' is not visible here
annotator.invisible.method=Method ''{0}'' is not visible here
annotator.missing.element=Missing {0, choice, 0#type|1#expression}
annotator.missing.expression=Expecting expression
annotator.missing.return=Missing return statement
annotator.missing.type.name=Cyclic type must have name ''{0}''

compiler.error.generic=Errors during Cyclic compilation: {0}
compiler.error.missing.cyclic=Cyclic compiler must be configured for Cyclic project
compiler.error.missing.java=No Java compiler enabled for project
compiler.error.process=Error running compiler: {0}
compiler.error.roots=Cannot compile Cyclic module with multiple roots
compiler.notice.foundProject=Found Cyclic project file
compiler.notice.moduleRoots=Using module source and output directories
compiler.warning.generic=Warning during Cyclic compilation: {0}

configurable.name.cyclic.compiler=Configure Cyclic Compiler
configurable.name.cyclic.facet=Configure Cyclic Facet
configurable.name.cyclic.language=Cyclic

configure.compiler.name=Name
configure.compiler.path=Path
configure.compiler.version=Version
configure.compilers.empty=No Cyclic compilers configured

create.class=Create new Cyclic class

error.sdk.cant.openJar=Could not open the specified JAR file
error.sdk.cant.readProps=Failed to read compiler properties
error.sdk.invalid.noName=File is not a valid Cyclic compiler (missing name)
error.sdk.invalid.noProps=File is not a valid Cyclic compiler (missing properties)
error.sdk.invalid.noVersion=File is not a valid Cyclic compiler (missing version)
error.sdk.noFile=File does not exist
error.sdk.notJar=File is not a JAR file

fileSelect.compiler.desc=Specifies the JAR file used to compile Cyclic files
fileSelect.compiler.name=Select Cyclic Compiler

fileType.desc=Cyclic file

gutterIcon.text.recordAccessor=Record accessor

inlay.name.implicitTypes=Implicit Cyclic variable types

inspection.fix.text.deleteStatement=Delete statement
inspection.text.unreachableCode=Unreachable code

intention.familyName.addImport=Add missing import
intention.familyName.changeSupertypeKind=Swap 'extends' and 'implements'
intention.familyName.refactor=Refactor
intention.familyName.renameFileToType=Rename file to match type
intention.familyName.renameTypeToFile=Rename type to match file

intention.text.addImport=Add import for ''{0}''
intention.text.changeSupertypeKind=Change to ''{0, choice, 0#extends|1#implements}''
intention.text.parens.add=Add clarifying parentheses
intention.text.parens.remove=Remove parentheses
intention.text.renameFileToType=Rename file to ''{0}.cyc''
intention.text.renameTypeToFile=Rename type to ''{0}''

kind.annotation=Annotation
kind.class=Class
kind.enum=Enum
kind.interface=Interface
kind.record=Record
kind.single=Single

label.compiler.path=Compiler JAR path:
label.cyclic.version=Cyclic Version:
label.workspace.compiler.path=Cyclic Compiler path (workspace-specific):

new.class=New Cyclic Class
